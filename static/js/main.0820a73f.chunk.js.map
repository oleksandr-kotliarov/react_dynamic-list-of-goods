{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","className","style","color","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","isLoading","setIsLoading","hasError","setHasError","loadGoods","useCallback","apiFunction","goodsFromServer","catch","finally","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACEC,UAAU,yBAEV,UAAQ,OACRC,MAAO,CAAEC,MAAOH,EAAKG,OAJvB,SAMGH,EAAKI,MAJDJ,EAAKK,U,MCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAV,GAAK,OACTA,EACGc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SACtCY,MAAM,EAAG,OAILC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMoB,QAAO,SAAAlB,GAAI,MAAmB,QAAfA,EAAKG,aCbhCgB,EAAU,WACrB,MAA0BC,mBAAiB,IAA3C,mBAAOtB,EAAP,KAAcuB,EAAd,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAAYC,uBAAY,SAACC,GAC7BL,GAAa,GACbK,IACGpB,MAAK,SAAAqB,GAAe,OAAIR,EAASQ,MACjCC,OAAM,kBAAML,GAAY,MACxBM,SAAQ,kBAAMR,GAAa,QAC7B,IAEH,OACE,sBAAKtB,UAAU,UAAf,UACE,oBAAIA,UAAU,aAAd,mCAEA,wBACEA,UAAU,yBACV+B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAUpB,IAJ3B,4BASA,wBACEL,UAAU,sBACV+B,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMP,EAAUf,IAJ3B,gCASA,wBACEV,UAAU,6BACV+B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMP,EAAUT,IAJ3B,4BASCO,EACI,wCACA,cAAC,EAAD,CAAW1B,MAAOA,IAEtBwB,GAAc,iDCrDrBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.0820a73f.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        className=\"has-text-weight-medium\"\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => (\n      goods\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .slice(0, 5)\n    ));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import { FC, useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport 'bulma';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadGoods = useCallback((apiFunction: () => Promise<Good[]>) => {\n    setIsLoading(true);\n    apiFunction()\n      .then(goodsFromServer => setGoods(goodsFromServer))\n      .catch(() => setHasError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"App box\">\n      <h1 className=\"title is-3\">Dynamic list of Goods</h1>\n\n      <button\n        className=\"button is-primary mr-2\"\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => loadGoods(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        className=\"button is-info mr-2\"\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => loadGoods(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        className=\"button is-danger mr-2 mb-6\"\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => loadGoods(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {hasError\n        ? (<div>Error</div>)\n        : (<GoodsList goods={goods} />)}\n\n      {isLoading && (<div>Loading...</div>)}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}